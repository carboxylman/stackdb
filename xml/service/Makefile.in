## -*- mode: Makefile -*-
##
## Copyright (c) 2012, 2013 The University of Utah
##
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of
## the License, or (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.

###############################################################################

SRCDIR		= @srcdir@
TOP_SRCDIR	= @top_srcdir@
SUBDIR		= xml/service
OBJDIR		= @top_builddir@
ODIR		= @top_builddir@/$(SUBDIR)

SUBDIRS = 

include $(OBJDIR)/Makeconf

GSOAPIMPORTDIR = @GSOAP@/share/gsoap/import
# Note, we only don't pass -2 to enable soap 1.2 because we manually
# include s2.gsm.h and make it into a module, so that
# all our other module linkage works out.
SOAPIMPORTDIR = $(GSOAPIMPORTDIR):$(SRCDIR):$(TOP_SRCDIR)/xml/schema:$(OBJDIR)/xml/schema
SOAPCPP2 = @SOAPCPP2@ -2 -I$(SOAPIMPORTDIR) -c -d . -x

CFLAGS += -I$(TOP_SRCDIR)/analysis -I$(TOP_SRCDIR)/target -I$(TOP_SRCDIR)/dwdebug \
	-I$(OBJDIR)/xml/schema -I$(TOP_SRCDIR)/xml/schema -I$(TOP_SRCDIR)/xml \
	-I$(OBJDIR) -I$(TOP_SRCDIR)/lib -I$(TOP_SRCDIR)/include -I.
CFLAGS += -DDWDEBUG_USE_STRTAB
CFLAGS += $(ELFUTILS_CFLAGS) $(GLIB_CFLAGS)
ifeq ($(ENABLE_XENACCESS),"1")
	CFLAGS += -D ENABLE_XENACCESS $(XENACCESS_FLAGS) -D ENABLE_XENSUPPORT
	CFLAGS += -I$(XENACCESS_INC)
endif
ifeq ($(ENABLE_LIBVMI),"1")
	CFLAGS += -D ENABLE_LIBVMI -D ENABLE_XENSUPPORT
	CFLAGS += -I$(LIBVMI)/include/libvmi
endif
ifeq ($(ENABLE_DISTORM),"1")
	CFLAGS += -D ENABLE_DISTORM -D SUPPORT_64BIT_OFFSET 
	CFLAGS += -I$(DISTORM)/include
endif

LDFLAGS += $(ELFUTILS_LDFLAGS) $(GLIB_LDFLAGS) -lgsoap -lpthread
ifeq ($(ENABLE_XENACCESS),"1")
	LDFLAGS += -lxenctrl -lxenstore -lc -L$(XENACCESS_LIBDIR)
endif
ifeq ($(ENABLE_LIBVMI),"1")
	LDFLAGS += -lxenctrl -lxenstore -lc -L$(LIBVMI)/lib -lvmi
endif
ifeq ($(ENABLE_DISTORM),"1")
	LDFLAGS += -L$(DISTORM)/lib -ldistorm3
endif

STATICLIBS := $(OBJDIR)/analysis/libanalysis.la $(OBJDIR)/target/libtarget.la \
	$(OBJDIR)/dwdebug/libdwdebug.la $(OBJDIR)/lib/libvmilib.la \
	$(OBJDIR)/xml/schema/libcommon_xml.la \
	$(OBJDIR)/xml/schema/libdebuginfo_xml.la \
	$(OBJDIR)/xml/schema/libtarget_xml.la \
	$(OBJDIR)/xml/schema/libanalysis_xml.la
ifeq ($(ENABLE_XENACCESS),"1")
	STATICLIBS += $(XENACCESS_A)
endif
ifeq ($(ENABLE_LIBVMI),"1")
	STATICLIBS += $(LIBVMI)/lib/libvmi.a
endif

HEADERS := $(SRCDIR)/../schema/debuginfo_xml.h $(SRCDIR)/debuginfo_rpc.h \
	$(SRCDIR)/../schema/target_xml.h $(SRCDIR)/target_rpc.h \
	$(SRCDIR)/../schema/analysis_xml.h $(SRCDIR)/analysis_rpc.h \
	$(SRCDIR)/../util.h proxyreq.h

OBJECTS-LIB := proxyreq.lo generic_rpc.lo # util.lo

OBJECTS-DEBUGINFO-RPCLIB := debuginfo_rpc.lo
OBJECTS-DEBUGINFO-MODULE := debuginfo_rpc_moduleC.lo debuginfo_rpc_moduleServer.lo 
OBJECTS-DEBUGINFO-SERVER := debuginfoC.lo debuginfoServer.lo 
OBJECTS-DEBUGINFO-SERVER-MAIN := debuginfo.lo 
OBJECTS-DEBUGINFO-SERVERLIB := debuginfoC.lo debuginfoServer.lo #debuginfoServerLib.lo

OBJECTS-DEBUGINFO-ALL := $(OBJECTS-DEBUGINFO-RPCLIB) $(OBJECTS-DEBUGINFO-MODULE) \
	$(OBJECTS-DEBUGINFO-SERVER) $(OBJECTS-DEBUGINFO-SERVER-MAIN) \
	$(OBJECTS-DEBUGINFO-SERVERLIB)

OBJECTS-TARGET-RPCLIB := target_rpc.lo
OBJECTS-TARGET-MODULE := target_rpc_moduleC.lo target_rpc_moduleServer.lo 
OBJECTS-TARGET-SERVER := targetC.lo targetServer.lo 
OBJECTS-TARGET-SERVER-MAIN := target.lo 
OBJECTS-TARGET-SERVERLIB := targetC.lo targetServer.lo #targetServerLib.lo

OBJECTS-TARGET-ALL := $(OBJECTS-TARGET-RPCLIB) $(OBJECTS-TARGET-MODULE) \
	$(OBJECTS-TARGET-SERVER) $(OBJECTS-TARGET-SERVER-MAIN) \
	$(OBJECTS-TARGET-SERVERLIB)

OBJECTS-TARGETLISTENER-CLIENTLIB := target_listener_moduleClientLib.lo

OBJECTS-ANALYSIS-RPCLIB := analysis_rpc.lo
OBJECTS-ANALYSIS-MODULE := analysis_rpc_moduleC.lo analysis_rpc_moduleServer.lo 
OBJECTS-ANALYSIS-SERVER := analysisC.lo analysisServer.lo 
OBJECTS-ANALYSIS-SERVER-MAIN := analysis.lo
OBJECTS-ANALYSIS-SERVERLIB := analysisC.lo analysisServer.lo #analysisServerLib.lo

OBJECTS-ANALYSISLISTENER-CLIENTLIB := analysis_listener_moduleClientLib.lo

OBJECTS-ANALYSIS-ALL := $(OBJECTS-ANALYSIS-RPCLIB) $(OBJECTS-ANALYSIS-MODULE) \
	$(OBJECTS-ANALYSIS-SERVER) $(OBJECTS-ANALYSIS-SERVER-MAIN) \
	$(OBJECTS-ANALYSIS-SERVERLIB)

OBJECTS := $(OBJECTS-DEBUGINFO-ALL) $(OBJECTS-TARGET-ALL) \
	$(OBJECTS-ANALYSIS-ALL) $(OBJECTS-TARGETLISTENER-CLIENTLIB) \
	$(OBJECTS-ANALYSISLISTENER-CLIENTLIB)

#
# Stuff for building libraries.  NB: if you link against the analysis lib, you
# get all the analysis, target, and debuginfo stuff you'll need.  If you link
# against the target lib, you'll get all the target and debuginfo you'll need.
# There is no library built for 
#
OBJECTS-TARGET-LIB := $(OBJECTS-TARGETLISTENER-CLIENTLIB) \
	  $(OBJECTS-TARGET-RPCLIB) \
	  $(OBJECTS-TARGET-MODULE) $(OBJECTS-TARGET-SERVERLIB) \
	  $(OBJECTS-DEBUGINFO-MODULE) $(OBJECTS-DEBUGINFO-RPCLIB)
OBJECTS-TARGET-SHLIB := $(OBJECTS-TARGETLISTENER-CLIENTLIB) \
	  $(OBJECTS-TARGET-RPCLIB) $(OBJECTS-TARGET-MODULE) \
	  $(OBJECTS-TARGET-SERVER) \

OBJECTS-ANALYSIS-LIB := $(OBJECTS-ANALYSISLISTENER-CLIENTLIB) \
	  $(OBJECTS-ANALYSIS-RPCLIB) \
	  $(OBJECTS-ANALYSIS-MODULE) $(OBJECTS-ANALYSIS-SERVER) \
	  $(OBJECTS-ANALYSIS-SERVER-MAIN) \
	  $(OBJECTS-DEBUGINFO-MODULE) $(OBJECTS-DEBUGINFO-RPCLIB) \
	  $(OBJECTS-TARGET-MODULE) $(OBJECTS-TARGETLISTENER-CLIENTLIB) \
	  $(OBJECTS-TARGET-RPCLIB)
OBJECTS-ANALYSIS-SHLIB := $(OBJECTS-ANALYSISLISTENER-CLIENTLIB) \
	  $(OBJECTS-ANALYSIS-RPCLIB) $(OBJECTS-ANALYSIS-MODULE) \
	  $(OBJECTS-ANALYSIS-SERVER)

LIBRARIES := libtarget_rpc.a libtarget_rpc.so.$(LIBVERSION) \
	     libanalysis_rpc.a libanalysis_rpc.so.$(LIBVERSION)

PROGRAMS := debuginfo target analysis
HELPERS  := monitored_target

INST_INC = 
INST_LIBEXEC = $(PROGRAMS) $(HELPERS)
INST_LIB = $(LIBRARIES)

NS = vmi1
NAMESPACE = http://anathema.flux.utah.edu/schema/vmi/1

# Get libtool to shut up when compiling.
RM=rm -f

all:	$(PROGRAMS) $(HELPERS) $(LIBRARIES) all-subdirs

include $(TOP_SRCDIR)/Makerules

%_rpc_moduleH.h: $(SRCDIR)/%_rpc.gsm.h
	$(SOAPCPP2) -w $< 

DEFPORT-debuginfo =  3901
DEFPORT-target = 3902
DEFPORT-analysis = 3903

%.wsdl: $(OBJDIR)/xml/schema/%_xml_moduleH.h %_rpc_moduleH.h 
	echo "#import \"$(@:.wsdl=)_xml.gsm.h\"" > $(@:.wsdl=).gs.h
	echo "#import \"$(@:.wsdl=)_rpc.gsm.h\"" >> $(@:.wsdl=).gs.h
	echo '//gsoap vmi1 service portName: http' >> $(@:.wsdl=).gs.h
	echo "//gsoap vmi1 service port: http://localhost:$(DEFPORT-$*)/vmi/1/$(@:.wsdl=)" >> $(@:.wsdl=).gs.h
	$(SOAPCPP2) -p $(@:.wsdl=) $(@:.wsdl=).gs.h
#	sed -i -e 's/\(#define $(@:.wsdl=)_srvStub_H\)/\1\n#include "envH.h"/' \
#		$(@:.wsdl=)_srvStub.h
	cp -p $@ $@.nostrip
	cp -p $(@:.wsdl=).nsmap $(@:.wsdl=).nsmap.c
	@if [ "$(@:.wsdl=)" = "target" ]; then \
		$(SRCDIR)/strip-gsoap-wsdl.pl \
			$(NAMESPACE)::../../../vmi/xml/schema/debuginfo.xsd \
			$(NAMESPACE)::../../../vmi/xml/schema/$(@:.wsdl=).xsd \
			< $@.nostrip > $@; \
		$(SRCDIR)/strip-gsoap-wsdl.pl \
			$(NAMESPACE)::../../../vmi/xml/schema/debuginfo.xsd \
			$(NAMESPACE)::../../../vmi/xml/schema/$(@:.wsdl=).xsd \
			< $@.nostrip > $@.test; \
	elif [ "$(@:.wsdl=)" = "analysis" ]; then \
		$(SRCDIR)/strip-gsoap-wsdl.pl \
			$(NAMESPACE)::../../../vmi/xml/schema/debuginfo.xsd \
			$(NAMESPACE)::../../../vmi/xml/schema/target.xsd \
			$(NAMESPACE)::../../../vmi/xml/schema/$(@:.wsdl=).xsd \
			< $@.nostrip > $@; \
		$(SRCDIR)/strip-gsoap-wsdl.pl \
			$(NAMESPACE)::../../../vmi/xml/schema/debuginfo.xsd \
			$(NAMESPACE)::../../../vmi/xml/schema/target.xsd \
			$(NAMESPACE)::../../../vmi/xml/schema/$(@:.wsdl=).xsd \
			< $@.nostrip > $@.test; \
	else \
		$(SRCDIR)/strip-gsoap-wsdl.pl \
			$(NAMESPACE)::../../../vmi/xml/schema/$(@:.wsdl=).xsd \
			< $@.nostrip > $@; \
		$(SRCDIR)/strip-gsoap-wsdl.pl \
			$(NAMESPACE)::../../../vmi/xml/schema/$(@:.wsdl=).xsd \
			< $@.nostrip > $@.test; \
	fi

%_listener.wsdl: $(SRCDIR)/../schema/%.xsd $(SRCDIR)/%_listener.gsm.h \
		 $(OBJDIR)/xml/schema/common_xml.gsm.h \
		 $(OBJDIR)/xml/schema/%_xml.gsm.h $(SRCDIR)/%_rpc.gsm.h \
		 $(OBJDIR)/xml/schema/xsdcH.h
	#echo "#import \"$(@:.wsdl=)_xml.gsm.h\"" > $(@:.wsdl=).gs.h
	#echo "#import \"$(@:.wsdl=)_rpc.gsm.h\"" >> $(@:.wsdl=).gs.h
	#echo '//gsoap vmi1 service portName: http' >> $(@:.wsdl=).gs.h
	#echo "//gsoap vmi1 service port: http://localhost:$(DEFPORT-$*)" >> $(@:.wsdl=).gs.h
	$(SOAPCPP2) -p $(@:.wsdl=) $(SRCDIR)/$(@:.wsdl=).gsm.h
#	sed -i -e 's/\(#define $(@:.wsdl=)_srvStub_H\)/\1\n#include "envH.h"/' \
#		$(@:.wsdl=)_srvStub.h
	cp -p $(@:_listener.wsdl=)Listener.wsdl $(@:_listener.wsdl=)Listener.wsdl.nostrip
	cp -p $(@:_listener.wsdl=)Listener.nsmap $(@:_listener.wsdl=)Listener.nsmap.c
	@if [ "$(@:_listener.wsdl=)" = "target" ]; then \
		$(SRCDIR)/strip-gsoap-wsdl.pl \
			$(NAMESPACE)::../../../vmi/xml/schema/debuginfo.xsd \
			$(NAMESPACE)::../../../vmi/xml/schema/$(@:_listener.wsdl=).xsd \
			< $(@:_listener.wsdl=)Listener.wsdl.nostrip > $(@:_listener.wsdl=)Listener.wsdl; \
		$(SRCDIR)/strip-gsoap-wsdl.pl \
			$(NAMESPACE)::../../../vmi/xml/schema/debuginfo.xsd \
			$(NAMESPACE)::../../../vmi/xml/schema/$(@:_listener.wsdl=).xsd \
			< $(@:_listener.wsdl=)Listener.wsdl.nostrip > $(@:_listener.wsdl=)Listener.wsdl.test; \
	elif [ "$(@:.wsdl=)" = "analysis" ]; then \
		$(SRCDIR)/strip-gsoap-wsdl.pl \
			$(NAMESPACE)::../../../vmi/xml/schema/debuginfo.xsd \
			$(NAMESPACE)::../../../vmi/xml/schema/target.xsd \
			$(NAMESPACE)::../../../vmi/xml/schema/$(@:_listener.wsdl=).xsd \
			< $(@:_listener.wsdl=)Listener.wsdl.nostrip > $(@:_listener.wsdl=)Listener.wsdl; \
		$(SRCDIR)/strip-gsoap-wsdl.pl \
			$(NAMESPACE)::../../../vmi/xml/schema/debuginfo.xsd \
			$(NAMESPACE)::../../../vmi/xml/schema/target.xsd \
			$(NAMESPACE)::../../../vmi/xml/schema/$(@:_listener.wsdl=).xsd \
			< $(@:_listener.wsdl=)Listener.wsdl.nostrip > $(@:_listener.wsdl=)Listener.wsdl.test; \
	else \
		$(SRCDIR)/strip-gsoap-wsdl.pl \
			$(NAMESPACE)::../../../vmi/xml/schema/$(@:_listener.wsdl=).xsd \
			< $(@:_listener.wsdl=)Listener.wsdl.nostrip > $(@:_listener.wsdl=)Listener.wsdl; \
		$(SRCDIR)/strip-gsoap-wsdl.pl \
			$(NAMESPACE)::../../../vmi/xml/schema/$(@:_listener.wsdl=).xsd \
			< $(@:_listener.wsdl=)Listener.wsdl.nostrip > $(@:_listener.wsdl=)Listener.wsdl.test; \
	fi

%_rpc_moduleServerLib.c: %.wsdl
	@echo -n ""

%_rpc_moduleServer.c: %.wsdl
	@echo -n ""

%_rpc_moduleC.c: %_rpc_moduleH.h
	@echo -n ""

%_listener_moduleClientLib.c: %_listener.wsdl
	@echo -n ""

%_listener_moduleClientLib.lo: %_listener_moduleClientLib.c
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -DWITH_NOSERVERREQUEST -c $<

%_rpc_moduleServerLib.lo: %_rpc_moduleServerLib.c
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -DWITH_NOSERVERREQUEST -c $<

%_rpc_moduleServer.lo: %_rpc_moduleServer.c
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -DWITH_NOGLOBAL -DWITH_NOSERVEREQUEST -DWITH_NOSERVE -c $<

%_rpc_moduleC.lo: %_rpc_moduleC.c
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

#%_rpc_moduleServer.lo: %_rpc_moduleServer.c
#	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -DWITH_NOGLOBAL -c $<

%C.c: %.wsdl 
	@echo -n ""

%Server.c: %.wsdl
	@echo -n ""

%C.lo: %C.c 
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

%Server.lo: %Server.c
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

%ServerLib.lo: %ServerLib.c
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

%_lib.lo: $(SRCDIR)/%_lib.c $(SRCDIR)/%_lib.h %.wsdl
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

common_xml.lo: $(SRCDIR)/common_xml.c $(SRCDIR)/common_xml.h common_xml.gsm.h
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

%_rpc.lo: $(SRCDIR)/%_rpc.c $(SRCDIR)/%_xml.h  $(SRCDIR)/%_rpc.h %.wsdl
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

debuginfo.lo: $(SRCDIR)/debuginfo.c $(HEADERS) debuginfo.wsdl
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

target.lo: $(SRCDIR)/target.c $(HEADERS) target.wsdl
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

analysis.lo: $(SRCDIR)/analysis.c $(HEADERS) analysis.wsdl
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

monitored_target.lo: $(SRCDIR)/monitored_target.c $(HEADERS) target.wsdl
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

%.lo: $(SRCDIR)/%.c 
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

debuginfo: debuginfo.wsdl \
	  $(OBJECTS-LIB) \
	  $(OBJECTS-XSD-LIB) $(OBJECTS-COMMON-LIB) $(OBJECTS-ENV-LIB) \
	  $(OBJECTS-DEBUGINFO-XMLLIB) $(OBJECTS-DEBUGINFO-RPCLIB) \
	  $(OBJECTS-DEBUGINFO-MODULE) $(OBJECTS-DEBUGINFO-SERVER) \
	  $(OBJECTS-DEBUGINFO-SERVER-MAIN) \
	  $(STATICLIBS)
	@$(LIBTOOL) --tag=CC --mode=link ${CC} $(LT_LDFLAGS) -o $@ \
	   $(OBJECTS-LIB) \
	   $(OBJECTS-XSD-LIB) $(OBJECTS-COMMON-LIB) $(OBJECTS-ENV-LIB)  \
	   $(OBJECTS-DEBUGINFO-XMLLIB) $(OBJECTS-DEBUGINFO-RPCLIB) \
	   $(OBJECTS-DEBUGINFO-MODULE) $(OBJECTS-DEBUGINFO-SERVER) \
	   $(OBJECTS-DEBUGINFO-SERVER-MAIN) \
	   $(STATICLIBS) $(LDFLAGS)

%.nsmap.lo: %.wsdl
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $(@:.lo=).c 

target: target.wsdl \
	  $(OBJECTS-LIB) \
	  $(OBJECTS-XSD-LIB) $(OBJECTS-COMMON-LIB) $(OBJECTS-ENV-LIB) \
	  $(OBJECTS-TARGETLISTENER-CLIENTLIB) \
	  $(OBJECTS-TARGET-XMLLIB) $(OBJECTS-TARGET-RPCLIB) \
	  $(OBJECTS-TARGET-MODULE) $(OBJECTS-TARGET-SERVER) \
	  $(OBJECTS-TARGET-SERVER-MAIN) \
	  $(OBJECTS-DEBUGINFO-MODULE) \
	  $(OBJECTS-DEBUGINFO-XMLLIB) $(OBJECTS-DEBUGINFO-RPCLIB) \
	  $(STATICLIBS)
	@$(LIBTOOL) --tag=CC --mode=link ${CC} $(LT_LDFLAGS) -o $@ \
		$(OBJECTS-LIB) \
		$(OBJECTS-XSD-LIB) $(OBJECTS-COMMON-LIB) $(OBJECTS-ENV-LIB) \
		$(OBJECTS-TARGETLISTENER-CLIENTLIB) \
		$(OBJECTS-TARGET-XMLLIB) $(OBJECTS-TARGET-RPCLIB) \
		$(OBJECTS-TARGET-MODULE) $(OBJECTS-TARGET-SERVER) \
		$(OBJECTS-TARGET-SERVER-MAIN) \
		$(OBJECTS-DEBUGINFO-MODULE) \
		$(OBJECTS-DEBUGINFO-XMLLIB) $(OBJECTS-DEBUGINFO-RPCLIB) \
		$(STATICLIBS) $(LDFLAGS)

monitored_target: target.nsmap.lo \
	  $(OBJECTS-LIB) \
	  $(OBJECTS-XSD-LIB) $(OBJECTS-COMMON-LIB) $(OBJECTS-ENV-LIB) \
	  $(OBJECTS-TARGETLISTENER-CLIENTLIB) \
	  $(OBJECTS-TARGET-XMLLIB) $(OBJECTS-TARGET-RPCLIB) \
	  $(OBJECTS-TARGET-MODULE) $(OBJECTS-TARGET-SERVERLIB) \
	  $(OBJECTS-DEBUGINFO-MODULE) \
	  $(OBJECTS-DEBUGINFO-XMLLIB) $(OBJECTS-DEBUGINFO-RPCLIB) \
	  $(STATICLIBS) monitored_target.lo
	@$(LIBTOOL) --tag=CC --mode=link ${CC} $(LT_LDFLAGS) -o $@ \
		$(OBJECTS-LIB) \
		$(OBJECTS-XSD-LIB) $(OBJECTS-COMMON-LIB) $(OBJECTS-ENV-LIB) \
		$(OBJECTS-TARGETLISTENER-CLIENTLIB) \
		$(OBJECTS-TARGET-XMLLIB) $(OBJECTS-TARGET-RPCLIB) \
		$(OBJECTS-TARGET-MODULE) $(OBJECTS-TARGET-SERVERLIB) \
		$(OBJECTS-DEBUGINFO-MODULE) \
		$(OBJECTS-DEBUGINFO-XMLLIB) $(OBJECTS-DEBUGINFO-RPCLIB) \
		$(STATICLIBS) monitored_target.lo target.nsmap.lo $(LDFLAGS)

analysis: analysis.wsdl \
	  $(OBJECTS-LIB) \
	  $(OBJECTS-XSD-LIB) $(OBJECTS-COMMON-LIB) $(OBJECTS-ENV-LIB) \
	  $(OBJECTS-ANALYSISLISTENER-CLIENTLIB) \
	  $(OBJECTS-ANALYSIS-XMLLIB) $(OBJECTS-ANALYSIS-RPCLIB) \
	  $(OBJECTS-ANALYSIS-MODULE) $(OBJECTS-ANALYSIS-SERVER) \
	  $(OBJECTS-ANALYSIS-SERVER-MAIN) \
	  $(OBJECTS-DEBUGINFO-MODULE) \
	  $(OBJECTS-DEBUGINFO-XMLLIB) $(OBJECTS-DEBUGINFO-RPCLIB) \
	  $(OBJECTS-TARGET-MODULE) \
	  $(OBJECTS-TARGETLISTENER-CLIENTLIB) \
	  $(OBJECTS-TARGET-XMLLIB) $(OBJECTS-TARGET-RPCLIB) \
	  $(STATICLIBS)
	@$(LIBTOOL) --tag=CC --mode=link ${CC} $(LT_LDFLAGS) -o $@ \
		$(OBJECTS-LIB) \
		$(OBJECTS-XSD-LIB) $(OBJECTS-COMMON-LIB) $(OBJECTS-ENV-LIB) \
		$(OBJECTS-ANALYSISLISTENER-CLIENTLIB) \
		$(OBJECTS-ANALYSIS-XMLLIB) $(OBJECTS-ANALYSIS-RPCLIB) \
		$(OBJECTS-ANALYSIS-MODULE) $(OBJECTS-ANALYSIS-SERVER) \
		$(OBJECTS-ANALYSIS-SERVER-MAIN) \
		$(OBJECTS-DEBUGINFO-MODULE) \
		$(OBJECTS-DEBUGINFO-XMLLIB) $(OBJECTS-DEBUGINFO-RPCLIB) \
		$(OBJECTS-TARGET-MODULE) \
		$(OBJECTS-TARGETLISTENER-CLIENTLIB) \
		$(OBJECTS-TARGET-XMLLIB) $(OBJECTS-TARGET-RPCLIB) \
		$(STATICLIBS) $(LDFLAGS)

libdebuginfo_rpc.a: $(HEADERS) $(OBJECTS-DEBUGINFO-LIB)
	@$(LIBTOOL) --tag=CC --mode=link $(CC) -o $@ $(OBJECTS-DEBUGINFO-LIB)
libdebuginfo_rpc.lo: $(HEADERS) $(OBJECTS-DEBUGINFO-SHLIB)
	@$(LIBTOOL) --tag=CC --mode=link ${CC} -shared -o $@ $(OBJECTS-DEBUGINFO-SHLIB)
libdebuginfo_rpc.so.$(LIBVERSION): libdebuginfo_rpc.lo
	$(CP) -f libdebuginfo_rpc.lo $@
libdebuginfo_rpc.so: libdebuginfo_rpc.so.$(LIBVERSION)
	$(LN_S) $< $@

libtarget_rpc.a: $(HEADERS) $(OBJECTS-TARGET-LIB)
	@$(LIBTOOL) --tag=CC --mode=link $(CC) -o $@ $(OBJECTS-TARGET-LIB)
libtarget_rpc.lo: $(HEADERS) $(OBJECTS-TARGET-SHLIB)
	@$(LIBTOOL) --tag=CC --mode=link ${CC} -shared -o $@ $(OBJECTS-TARGET-SHLIB)
libtarget_rpc.so.$(LIBVERSION): libtarget_rpc.lo
	$(CP) -f libtarget_rpc.lo $@
libtarget_rpc.so: libtarget_rpc.so.$(LIBVERSION)
	$(LN_S) $< $@

libanalysis_rpc.a: $(HEADERS) $(OBJECTS-ANALYSIS-LIB)
	@$(LIBTOOL) --tag=CC --mode=link $(CC) -o $@ $(OBJECTS-ANALYSIS-LIB)
libanalysis_rpc.lo: $(HEADERS) $(OBJECTS-ANALYSIS-SHLIB)
	@$(LIBTOOL) --tag=CC --mode=link ${CC} -shared -o $@ $(OBJECTS-ANALYSIS-SHLIB)
libanalysis_rpc.so.$(LIBVERSION): libanalysis_rpc.lo
	$(CP) -f libanalysis_rpc.lo $@
libanalysis_rpc.so: libanalysis_rpc.so.$(LIBVERSION)
	$(LN_S) $< $@

install: $(PROGRAMS) $(HELPERS) def-install install-subdirs
	mkdir -p $(INSTALL_SHAREDIR)/vmi
	mkdir -p $(INSTALL_SHAREDIR)/share/vmi/wsdl
	$(INSTALL) -m 644 debuginfo.wsdl ${INSTALL_SHAREDIR}/share/vmi/wsdl
	$(INSTALL) -m 644 target.wsdl $(INSTALL_SHAREDIR)/share/vmi/wsdl
	$(INSTALL) -m 644 analysis.wsdl $(INSTALL_SHAREDIR)/share/vmi/wsdl
	mkdir -p $(INSTALL_SHAREDIR)/share/vmi/schema
	$(INSTALL) -m 644 $(SRCDIR)/../schema/*.xsd $(INSTALL_SHAREDIR)/share/vmi/schema

clean-debuginfo:
	@$(LIBTOOL) --mode=clean rm -f \
		$(OBJECTS-DEBUGINFO-ALL) $(OBJECTS-DEBUGINFO-LIB)
	$(RM) debuginfo*

clean-target:
	@$(LIBTOOL) --mode=clean rm -f \
		$(OBJECTS-TARGET-ALL) $(OBJECTS-TARGET-LIB)
	$(RM) target*

clean-analysis:
	@$(LIBTOOL) --mode=clean rm -f \
		$(OBJECTS-ANALYSIS-ALL) $(OBJECTS-ANALYSIS-LIB)
	$(RM) analysis*

clean-misc:
	@$(LIBTOOL) --mode=clean rm -f $(OBJECTS-LIB)
	@$(LIBTOOL) --mode=clean rm -f monitored_target.lo
	@$(LIBTOOL) --mode=clean rm -f target_nsmap.lo

clean: clean-debuginfo clean-target clean-analysis clean-misc clean-subdirs
	$(RM) *.nsmap *.xsd
	$(RM) RECV.log TEST.log
	$(RM) $(PROGRAMS) $(OBJECTS) $(HELPERS) $(LIBRARIES) lib*
	$(RM) -rf .libs

distclean: distclean-subdirs

# How to recursively descend into subdirectories to make general
# targets such as `all'.
%.MAKE:
	@$(MAKE) -C $(dir $@) $(basename $(notdir $@))
%-subdirs: $(addsuffix /%.MAKE,$(SUBDIRS)) ;

.PHONY:	$(SUBDIRS)

.SECONDARY:
