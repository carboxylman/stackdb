## -*- mode: Makefile -*-
##
## Copyright (c) 2013 The University of Utah
##
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of
## the License, or (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.

###############################################################################

SRCDIR		= @srcdir@
TOP_SRCDIR	= @top_srcdir@
SUBDIR		= xml/client/java
OBJDIR		= @top_builddir@

SUBDIRS = 

include $(OBJDIR)/Makeconf

NS=http://anathema.flux.utah.edu/schema/vmi/1

PACKAGE = vmi1

JAVA = @JAVA@
JAVAC = @JAVAC@
JAVA_HOME = @JAVA_HOME@

AXIS2_HOME = @AXIS2_HOME@
AXIS2_CLASSPATH := $(shell JAVA_HOME=$(JAVA_HOME) AXIS2_HOME=$(AXIS2_HOME) $(SRCDIR)/dump_axis2_env.sh | grep AXIS2_CLASSPATH= | sed -e s/AXIS2_CLASSPATH=//)

AXIS2_DB :=  "adb"
#AXIS2_DB := "jaxbri"
#AXIS2_DB :=  "jibx"
#
# Adjust classpath stuff for different databindings.
#
ifeq ($(AXIS2_DB),"jaxbri")
    LOCAL_CLASSPATH := @abs_builddir@/debuginfo/build/lib/Debuginfo-test-client.jar:@abs_builddir@/target/build/lib/Target-test-client.jar
else
   LOCAL_CLASSPATH := @abs_builddir@/debuginfo/build/lib/debuginfo.aar:@abs_builddir@/target/build/lib/target.aar:@abs_builddir@/target/build/lib/targetListener.aar
endif
#
# Only enable if you are using adb and want validation disabled.  For now,
# we default to this because ADB without validation does not work with our 
# schemas.
#
AXIS2_DB_OPTS := 
ifeq ($(AXIS2_DB),"adb")
    AXIS2_DB_OPTS := -Eosv
endif

ANT = @ANT@

ifneq ($(CLASSPATH),"")
    CLASSPATH := $(AXIS2_CLASSPATH):$(LOCAL_CLASSPATH):$(CLASSPATH)
else
    CLASSPATH := $(AXIS2_CLASSPATH):$(LOCAL_CLASSPATH)
endif

STUBS = debuginfo/src/$(PACKAGE)/DebuginfoStub.java \
	target/src/$(PACKAGE)/TargetStub.java
SERVERSTUBS = target/src/$(PACKAGE)/TargetListenerSkeleton.java
JARS = debuginfo/build/lib/debuginfo.aar target/build/lib/target.aar 

PROGRAMS = DebuginfoTest.class TargetTest.class

all:	run.sh $(SERVERSTUBS) $(STUBS) $(JARS) $(PROGRAMS) all-subdirs

include $(TOP_SRCDIR)/Makerules

run.sh:
	echo "#/bin/sh" > $@
	echo "" >> $@
	echo "$(JAVA) -classpath $(CLASSPATH) " '$$1' >> $@
	chmod ug+x $@

debuginfo/src/$(PACKAGE)/DebuginfoStub.java: $(OBJDIR)/xml/service/debuginfo.wsdl.test
	mkdir -p debuginfo
	JAVA_HOME=$(JAVA_HOME) AXIS2_HOME=$(AXIS2_HOME) \
		${AXIS2_HOME}/bin/wsdl2java.sh -d $(AXIS2_DB) $(AXIS2_DB_OPTS) \
		 -o debuginfo -ns2p $(NS)=vmi1 -p $(PACKAGE) -or -u -uri $<

target/src/$(PACKAGE)/TargetListenerSkeleton.java: $(OBJDIR)/xml/service/targetListener.wsdl.test
	mkdir -p target
	JAVA_HOME=$(JAVA_HOME) AXIS2_HOME=$(AXIS2_HOME) \
		${AXIS2_HOME}/bin/wsdl2java.sh -d $(AXIS2_DB) $(AXIS2_DB_OPTS) \
		-o target -ns2p $(NS)=vmi1 -p $(PACKAGE) -or -ss -uri $<

target/src/$(PACKAGE)/TargetStub.java: $(OBJDIR)/xml/service/target.wsdl.test debuginfo/src/$(PACKAGE)/DebuginfoStub.java
	mkdir -p target
	JAVA_HOME=$(JAVA_HOME) AXIS2_HOME=$(AXIS2_HOME) \
		${AXIS2_HOME}/bin/wsdl2java.sh -d $(AXIS2_DB) $(AXIS2_DB_OPTS) \
		 -o target -ns2p $(NS)=vmi1 -p $(PACKAGE) -or -u -uri $<

debuginfo/build/lib/debuginfo.aar: debuginfo/src/$(PACKAGE)/DebuginfoStub.java
	(JAVA_HOME=$(JAVA_HOME) CLASSPATH=$(CLASSPATH) \
		AXIS2_HOME=$(AXIS2_HOME) AXIS2_CLASSPATH=$(AXIS2_CLASSPATH) \
		$(ANT) -buildfile debuginfo/build.xml jar.all)

target/build/lib/target.aar: target/src/$(PACKAGE)/TargetStub.java \
		target/src/$(PACKAGE)/TargetListenerSkeleton.java
	(JAVA_HOME=$(JAVA_HOME) CLASSPATH=$(CLASSPATH) \
		AXIS2_HOME=$(AXIS2_HOME) AXIS2_CLASSPATH=$(AXIS2_CLASSPATH) \
		$(ANT) -buildfile target/build.xml jar.all)

DebuginfoTest.class: DebuginfoTest.java debuginfo/build/lib/debuginfo.aar
	$(JAVAC) -classpath $(CLASSPATH) DebuginfoTest.java

TargetTest.class: TargetTest.java target/build/lib/target.aar
	$(JAVAC) -classpath $(CLASSPATH) TargetTest.java

install: def-install install-subdirs

clean: clean-subdirs
	rm -rf $(STUBS) $(SERVERSTUBS) 
	rm -f $(PROGRAMS)
	rm -rf debuginfo target 
	rm -f run.sh

distclean: distclean-subdirs

# How to recursively descend into subdirectories to make general
# targets such as `all'.
%.MAKE:
	@$(MAKE) -C $(dir $@) $(basename $(notdir $@))
%-subdirs: $(addsuffix /%.MAKE,$(SUBDIRS)) ;

.PHONY:	$(SUBDIRS)

.SECONDARY:
