## -*- mode: Makefile -*-
##
## Copyright (c) 2012-2014 The University of Utah
##
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of
## the License, or (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.

###############################################################################

SRCDIR		= @srcdir@
TOP_SRCDIR	= @top_srcdir@
SUBDIR		= target
OBJDIR		= @top_builddir@

SUBDIRS = 

include $(OBJDIR)/Makeconf

CFLAGS += -I$(TOP_SRCDIR)/target -I$(OBJDIR) -I$(TOP_SRCDIR)/lib \
	-I$(TOP_SRCDIR)/include -I$(TOP_SRCDIR)/dwdebug 
CFLAGS += $(ELFUTILS_CFLAGS) $(GLIB_CFLAGS)
ifeq ($(ENABLE_XENACCESS),"1")
	CFLAGS += -D ENABLE_XENACCESS $(XENACCESS_FLAGS) -D ENABLE_XENSUPPORT
	CFLAGS += -I$(XENACCESS_INC)
	PCCFLAGS += -D ENABLE_XENACCESS $(XENACCESS_FLAGS) -D ENABLE_XENSUPPORT
	PCCFLAGS += -I$(XENACCESS_INC)
endif
ifeq ($(ENABLE_LIBVMI),"1")
	CFLAGS += -D ENABLE_LIBVMI -D ENABLE_XENSUPPORT
	CFLAGS += -I$(LIBVMI)/include/libvmi
	PCCFLAGS += -D ENABLE_LIBVMI -D ENABLE_XENSUPPORT
	PCCFLAGS += -I$(LIBVMI)/include/libvmi
endif
ifeq ($(ENABLE_DISTORM),"1")
	CFLAGS += -D ENABLE_DISTORM -DSUPPORT_64BIT_OFFSET 
	CFLAGS += -I$(DISTORM)/include
	PCCFLAGS += -D ENABLE_DISTORM -DSUPPORT_64BIT_OFFSET 
	PCCFLAGS += -I$(DISTORM)/include
endif

LDFLAGS += $(ELFUTILS_LDFLAGS) $(GLIB_LDFLAGS)
ifeq ($(ENABLE_XENACCESS),"1")
	LDFLAGS += -lxenctrl -lxenstore -lc -L$(XENACCESS_LIBDIR)
	PCLDFLAGS += -lxenctrl -lxenstore -lc -L$(XENACCESS_LIBDIR)
endif
ifeq ($(ENABLE_LIBVMI),"1")
	LDFLAGS += -lxenctrl -lxenstore -lc -L$(LIBVMI)/lib -lvmi
	PCLDFLAGS += -lxenctrl -lxenstore -lc -L$(LIBVMI)/lib -lvmi
endif
ifeq ($(ENABLE_DISTORM),"1")
	LDFLAGS += -L$(DISTORM)/lib -ldistorm3
	PCLDFLAGS += -L$(DISTORM)/lib -ldistorm3
endif

HEADERS := $(TOP_SRCDIR)/dwdebug/dwdebug.h $(TOP_SRCDIR)/dwdebug/dwdebug_priv.h \
	$(TOP_SRCDIR)/dwdebug/binfile.h \
	$(SRCDIR)/target.h $(SRCDIR)/target_api.h \
	$(SRCDIR)/probe.h $(SRCDIR)/probe_api.h \
	$(TOP_SRCDIR)/include/list.h $(TOP_SRCDIR)/include/alist.h \
	$(TOP_SRCDIR)/include/common.h $(TOP_SRCDIR)/include/log.h \
	$(TOP_SRCDIR)/include/output.h $(TOP_SRCDIR)/include/clfit.h \
	$(TOP_SRCDIR)/include/glib_wrapper.h

OBJECTS := target.lo target_api.lo target_generic.lo memory.lo location.lo \
	symbol.lo value.lo probe.lo probe_lib.lo probe_value.lo probe_filter.lo \
	target_nv_filter.lo \
	target_os.lo target_process.lo target_os_linux_generic.lo
OBJECTS += target_linux_userproc.lo target_php.lo
ifeq ($(ENABLE_XENSUPPORT),"1")
	OBJECTS += target_xen_vm.lo target_xen_vm_util.lo \
		target_xen_vm_process.lo
endif
ifeq ($(ENABLE_DISTORM),"1")
	OBJECTS += disasm.lo
endif

LIBRARIES := libtarget.la

PROGRAMS := dumptarget

STATICLIBS := $(OBJDIR)/dwdebug/libdwdebug.la $(OBJDIR)/lib/libvmilib.la
ifeq ($(ENABLE_XENACCESS),"1")
	STATICLIBS += $(XENACCESS_A)
endif
ifeq ($(ENABLE_LIBVMI),"1")
	STATICLIBS += $(LIBVMI)/lib/libvmi.a
endif

INST_INC = target_api.h probe_api.h
ifeq ($(ENABLE_DISTORM),"1")
	INST_INC += disasm.h
endif
INST_LIB = $(LIBRARIES)
INST_BIN = dumptarget
INST_PC = target.pc

PCLDFLAGS += -lvmilib -ldwdebug -ltarget

# Get libtool to shut up when compiling.
RM=rm -f

all:	$(LIBRARIES) $(PROGRAMS) all-subdirs

include $(TOP_SRCDIR)/Makerules

.c.lo:	$(HEADERS)
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

libtarget.la:	$(OBJECTS)
	@$(LIBTOOL) --tag=CC --mode=link $(CC) -o $@ $(OBJECTS) \
		-rpath $(INSTALL_LIBDIR) ${LDFLAGS}

dumptarget: $(HEADERS) dumptarget.lo $(LIBRARIES) $(STATICLIBS)
	@$(LIBTOOL) --tag=CC --mode=link $(CC) $(LT_LDFLAGS) -o $@ $@.lo \
		$(CFLAGS) $(LIBRARIES) $(STATICLIBS) $(LDFLAGS)

target.pc: $(SRCDIR)/Makefile.in $(TOP_SRCDIR)/Makeconf.in \
	   $(TOP_SRCDIR)/Makefile.in
	echo "prefix=$(INSTALL_TOPDIR)" > $@
	echo "exec_prefix=$(INSTALL_TOPDIR)" >> $@
	echo "includedir=$(INSTALL_INCDIR)" >> $@
	echo "libdir=$(INSTALL_LIBDIR)" >> $@
	echo "" >> $@
	echo "Name: target" >> $@
	echo "Description: The VMI target library" >> $@
	echo "Version: $(LIBVERSION)" >> $@
	echo "Cflags: $(PCCFLAGS)" >> $@
	echo "Libs: $(PCLDFLAGS)" >> $@

install: def-install install-subdirs

clean: clean-subdirs
	@$(LIBTOOL) --mode=clean rm -f $(OBJECTS) $(LIBRARIES)
	@$(LIBTOOL) --mode=clean rm -f $(PROGRAMS)
	rm -f dumptarget*
	$(RM) -rf .libs

distclean: distclean-subdirs

# How to recursively descend into subdirectories to make general
# targets such as `all'.
%.MAKE:
	@$(MAKE) -C $(dir $@) $(basename $(notdir $@))
%-subdirs: $(addsuffix /%.MAKE,$(SUBDIRS)) ;

.PHONY:	$(SUBDIRS)

.SECONDARY:
