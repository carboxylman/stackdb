#
# Most of the configure-substitution magic is done here.
# All the other makefiles in the NodeOS include
# this fragment
#

# Need the PATH because the older autoconf does not support
# AC_PATH_TOOL which is needed for cross-compilation to work.
#export PATH	= @PATH@

export CC       = @CC@
export CPP	= @CPP@
export CXX	= @CXX@
export LD	= @CC@ ${CFLAGS}
export STRIP    = @STRIP@
export LD	= @LD@
export RANLIB	= @RANLIB@
export LIBTOOL  = @LIBTOOL@
export AR	= @AR@
export RM	= @RM@
export CP	= @CP@
export LN_S	= @LN_S@
export MKDIR_P	= @MKDIR_P@
export TAR	= @TAR@
export YACC	= @YACC@
export LEX	= @LEX@
export SWIG	= @SWIG@

prefix		= @prefix@
exec_prefix	= @exec_prefix@

CPPFLAGS	= @CPPFLAGS@
CFLAGS	       += @CFLAGS@
CXXFLAGS       += @CXXFLAGS@
LDFLAGS		= @LDFLAGS@

PYTHON_INCLUDE  = @PYTHON_INCLUDE@
PYTHON_LIB      = @PYTHON_LIB@

DESTDIR        ?= 
INSTALL_TOPDIR	= $(DESTDIR)@prefix@
INSTALL_DIR     = $(DESTDIR)@prefix@
INSTALL_LIBDIR  = $(DESTDIR)@libdir@
INSTALL_INCDIR  = $(DESTDIR)@incdir@
INSTALL_BINDIR	= $(DESTDIR)@bindir@
INSTALL_SBINDIR	= $(DESTDIR)@sbindir@
INSTALL_LIBEXECDIR = $(DESTDIR)@libexecdir@
INSTALL_ETCDIR  = $(DESTDIR)@sysconfdir@
INSTALL_INCDIR  = $(DESTDIR)@includedir@
INSTALL_RCDIR	= $(DESTDIR)@INSTALL_RCDIR@

INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL@ -m 755
EXE 		= @EXEEXT@
INSTALL_DATA	= @INSTALL@ -m 444
SUDO		= @SUDO@

export SHELL = /bin/sh

ELFUTILS = @ELFUTILS@

ELFUTILS_CFLAGS = -I$(ELFUTILS)/include
ELFUTILS_LDFLAGS = -L$(ELFUTILS)/lib -L$(ELFUTILS)/lib/elfutils -ldw -lelf -lebl

# need this to pick up pkg-config files in wherever glib might be
GLIB            = @GLIB@
PKG_CONFIG_PATH := @GLIB@/lib/pkgconfig
export PKG_CONFIG_PATH

GLIB_CFLAGS     = `pkg-config --cflags glib-2.0`
GLIB_LDFLAGS    = `pkg-config --libs glib-2.0`

#
# XXX this stuff should be pkg-config'd or similar
#
XENACCESS_FLAGS = -D ENABLE_XEN
ifeq ("@ENABLE_XENACCESS_DEBUG@","1")
     XENACCESS_FLAGS += -D XA_DEBUG
endif
ifeq ("@XC_HAVE_MAP_FOREIGN@","1")
    XENACCESS_FLAGS += -D HAVE_MAP_FOREIGN
endif
XENACCESS_LIBDIR= $(OBJDIR)/xenaccess
XENACCESS_A     = $(XENACCESS_LIBDIR)/libxenaccess.a
XENACCESS_SO    = $(XENACCESS_LIBDIR)/libxenaccess.so
XENACCESS_INC   = $(TOP_SRCDIR)/

ENABLE_XENACCESS = "@ENABLE_XENACCESS@"

ENABLE_DISTORM   = "@ENABLE_DISTORM@"
DISTORM          = @DISTORM@

VMPROBES_FLAGS  = -D VMPROBE_DEBUG -D VMPROBE_i386 -D VMPROBE_SIGNAL
#VMPROBES_FLAGS += -D VMPROBE_BENCHMARK
VMPROBES_LIBDIR = $(OBJDIR)/vmprobes
VMPROBES_A      = $(VMPROBES_LIBDIR)/libvmprobes.a
VMPROBES_SO     = $(VMPROBES_LIBDIR)/libvmprobes.so
VMPROBES_INC    = $(TOP_SRCDIR)/

#
# Set these so we get lseek64 right, everywhere, without having to muck
# with header files too much.
#
CFLAGS += -D_GNU_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64

CFLAGS += -Wall -Wextra -Wno-unused-parameter
#-Wswitch-default -Wswitch-enum -Wtrampolines -Wtraditional-conversion -Wdeclaration-after-statement -Wshadow -Wbad-function-cast -Wcast-qual -Wcast-align -Wconversion -Wlogical-op -Wstrict-prototypes -Wold-style-definition -Wmissing-parameter-type -Wmissing-prototypes -Wmissing-declarations -Wmissing-field-initializers -Wmissing-format-attribute -Winline 

CFLAGS += -O2

ifeq ("@ENABLE_DEBUGINFO@","1")
     CFLAGS += -g
endif
ifeq ("@ENABLE_PROFILING@","1")
     CFLAGS += -pg
endif
ifeq ("@ENABLE_VMI_DEBUG@","1")
     CFLAGS += -DVMI_DEBUG
endif
