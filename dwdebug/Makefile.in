## -*- mode: Makefile -*-
##
## Copyright (c) 2011, 2012, 2013, 2014, 2015 The University of Utah
##
## This program is free software; you can redistribute it and/or
## modify it under the terms of the GNU General Public License as
## published by the Free Software Foundation; either version 2 of
## the License, or (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.

###############################################################################

SRCDIR		= @srcdir@
TOP_SRCDIR	= @top_srcdir@
SUBDIR		= dwdebug
OBJDIR		= @top_builddir@

SUBDIRS = 

include $(OBJDIR)/Makeconf

LCFLAGS := -I$(SRCDIR) -I$(OBJDIR) -I$(TOP_SRCDIR)/lib -I$(TOP_SRCDIR)/include
LCFLAGS += $(ELFUTILS_CFLAGS) $(GLIB_CFLAGS)
#CFLAGS += -pg 

CFLAGS += $(LCFLAGS)
PYCFLAGS += -I@PYTHON_INCLUDE@ $(LCFLAGS)

LDFLAGS += $(ELFUTILS_LDFLAGS) $(GLIB_LDFLAGS)

OBJECTS := symdict.lo scope.lo location.lo binfile.lo binfile_elf.lo debug.lo \
	dwarf_debuginfo.lo dwarf_elfutils.lo dwarf_expr.lo dwarf_cfa.lo
DEPENDENCIES := $(OBJECTS:%.lo=%.d)
LIBRARIES := libdwdebug.la 
STATICLIBS :=  $(OBJDIR)/lib/libvmilib.la 
ifeq ($(ENABLE_PYTHON),"1")
SWIGLIBS := libpydwdebug.la
else
SWIGLIBS := 
endif

PROGRAMS := dumpdebuginfo debugserver

INST_INC = dwdebug.h binfile.h memory-access.h
INST_LIB = $(LIBRARIES) $(SWIGLIBS)
INST_BIN = $(PROGRAMS)
INST_PC = dwdebug.pc

PCLDFLAGS += -lvmilib -ldwdebug

# Get libtool to shut up when compiling.
RM=rm -f

all:	$(LIBRARIES) $(SWIGLIBS) $(PROGRAMS) all-subdirs

include $(TOP_SRCDIR)/Makerules

# Don't fail on missing .d files; there won't be any on the first run.
-include $(DEPENDENCIES) 

libdwdebug.la: $(OBJECTS)
	@$(LIBTOOL) --tag=CC --mode=link $(CC) -o $@ $(OBJECTS) \
		-rpath $(INSTALL_LIBDIR) ${LDFLAGS}

dwdebug_wrap_py.c: $(SRCDIR)/dwdebug.i $(SRCDIR)/dwdebug.h #$(SRCDIR)/dwdebug.py.tail
	swig -python $(PYCFLAGS) -o dwdebug_wrap_py.c -module dwdebug \
		$(SRCDIR)/dwdebug.i
	#cat $(SRCDIR)/dwdebug.py.tail >> dwdebug.py
	#touch $@

dwdebug_wrap_py.lo: dwdebug_wrap_py.c $(SRCDIR)/dwdebug.h
	@$(LIBTOOL) --tag=CC --mode=compile $(CC) $(PYCFLAGS) -c $<

libpydwdebug.la: dwdebug_wrap_py.lo
	@$(LIBTOOL) --tag=CC --mode=link $(CC) -o $@ $< -rpath $(INSTALL_LIBDIR) \
		${LDFLAGS}

dumpdebuginfo: $(LIBRARIES) dumpdebuginfo.lo $(STATICLIBS)
	@$(LIBTOOL) --tag=CC --mode=link $(CC) $(LT_LDFLAGS) -o $@ $@.lo \
		$(CFLAGS) $(LIBRARIES) $(STATICLIBS) $(LDFLAGS)

DLMFLAGS = -D MORECORE=shm_morecore -D MORECORE_CONTIGUOUS=1 -D HAVE_MMAP=0 -D HAVE_MREMAP=0 -D DEFAULT_GRANULARITY=16*1024*1024 -D DEFAULT_TRIM_THRESHOLD=8*1024*1024 -D MSPACES=1 -D USE_DL_PREFIX
# -D ONLY_MSPACES 
#DLMFLAGS = -D USE_DL_PREFIX -D MSPACES

dlmalloc.lo: dlmalloc.c
	$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} ${DLMFLAGS} \
		-MD -MP -MT $@ -MF ${@:.lo=.d} -c $<

debugserver.lo: debugserver.c
	$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} ${DLMFLAGS} \
		-MD -MP -MT $@ -MF ${@:.lo=.d} -c $<

debugserver: $(LIBRARIES) debugserver.lo dlmalloc.lo $(STATICLIBS)
	@$(LIBTOOL) --tag=CC --mode=link $(CC) $(LT_LDFLAGS) -o $@ $@.lo \
		$(CFLAGS) ${DLMFLAGS} $(LIBRARIES) $(STATICLIBS) dlmalloc.lo $(LDFLAGS) -lrt

dwdebug.pc: $(SRCDIR)/Makefile.in $(TOP_SRCDIR)/Makeconf.in \
	   $(TOP_SRCDIR)/Makefile.in
	echo "prefix=$(INSTALL_TOPDIR)" > $@
	echo "exec_prefix=$(INSTALL_TOPDIR)" >> $@
	echo "includedir=$(INSTALL_INCDIR)" >> $@
	echo "libdir=$(INSTALL_LIBDIR)" >> $@
	echo "" >> $@
	echo "Name: target" >> $@
	echo "Description: The VMI dwdebug library" >> $@
	echo "Version: $(LIBVERSION)" >> $@
	echo "Cflags: $(PCCFLAGS)" >> $@
	echo "Libs: $(PCLDFLAGS)" >> $@

install: def-install install-subdirs

clean: clean-subdirs
	@$(LIBTOOL) --mode=clean rm -f $(OBJECTS) $(LIBRARIES) $(SWIGLIBS)
	@$(LIBTOOL) --mode=clean rm -f $(PROGRAMS)
	rm -f dumpdebuginfo* debugserver* .libs/dwdebug_wrap* dwdebug_wrap* dwdebug.py
	$(RM) -rf .libs
	$(RM) -f $(DEPENDENCIES)

distclean: distclean-subdirs

# How to recursively descend into subdirectories to make general
# targets such as `all'.
%.MAKE:
	@$(MAKE) -C $(dir $@) $(basename $(notdir $@))
%-subdirs: $(addsuffix /%.MAKE,$(SUBDIRS)) ;

.PHONY:	$(SUBDIRS)

.SECONDARY:
