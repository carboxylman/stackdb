PACKAGE = dwdebug
VERSION = 0.1
LIBVERSION = 0.1

SRCDIR		= @srcdir@
TOP_SRCDIR	= @top_srcdir@
SUBDIR		= dwdebug
OBJDIR		= @top_builddir@

SUBDIRS = 

include $(OBJDIR)/Makeconf

CFLAGS := -Wall
//CFLAGS += -O2
CFLAGS += -g
CFLAGS += -DLIBDWDEBUG_DEBUG
CFLAGS += -I$(SRCDIR)/../lib -I$(OBJDIR)
#CFLAGS += $(XENACCESS_FLAGS) $(VMPROBES_FLAGS)
#CFLAGS += -I./ -I$(XENACCESS_INC)

CFLAGS += $(shell pkg-config --cflags glib-2.0)

CFLAGS += -I$(ELFUTILS)/include
LDFLAGS := $(shell pkg-config --libs glib-2.0)
LDFLAGS += -L$(ELFUTILS)/lib -L$(ELFUTILS)/lib/elfutils -ldw -lelf -lebl

HEADERS := $(SRCDIR)/libdwdebug.h $(SRCDIR)/../lib/list.h

OBJECTS := debug.lo target.lo target_linux_userproc.lo dwarf_debuginfo.lo \
	   dwarf_elfutils.lo 
LIBRARIES := libdwdebug.a libdwdebug.so.$(LIBVERSION)
EXAMPLES := targetdumpval dumpdebuginfo

INST_INC = libdwdebug.h
INST_LIB = $(LIBRARIES)

all:	$(LIBRARIES) libdwdebug.so $(EXAMPLES) all-subdirs

include $(TOP_SRCDIR)/Makerules

.c.lo:	$(HEADERS)
	@$(LIBTOOL) --tag=CC --mode=compile ${CC} ${CFLAGS} -c $<

libdwdebug.a:	$(HEADERS) $(OBJECTS)
	@$(LIBTOOL) --tag=CC --mode=link $(CC) -o libdwdebug.a $(OBJECTS)

libdwdebug.lo:	$(HEADERS) $(OBJECTS)
	@$(LIBTOOL) --tag=CC --mode=link ${CC} -shared -o $@ $(OBJECTS)

libdwdebug.so.$(LIBVERSION):	libdwdebug.lo
	$(CP) -f libdwdebug.lo $@

libdwdebug.so:	libdwdebug.so.$(LIBVERSION)
	$(LN_S) $< $@

targetdumpval: $(HEADERS) $(LIBRARIES) targetdumpval.lo
	$(CC) -o $@ $(CFLAGS) $@.o libdwdebug.a $(LDFLAGS)

dumpdebuginfo: $(HEADERS) $(LIBRARIES) dumpdebuginfo.lo
	$(CC) -o $@ $(CFLAGS) $@.o libdwdebug.a $(LDFLAGS)

targetdumpval-shared: $(HEADERS) $(LIBRARIES) targetdumpval.lo
	$(CC) -o $@ $(CFLAGS) $@.o libdwdebug.a $(LDFLAGS_SHARED)

install: def-install install-subdirs
	$(SUDO) $(CP) -fd libdwdebug.so $(DESTDIR)$(INSTALL_LIBDIR)/

clean: clean-subdirs
	$(RM) -f $(OBJECTS) targetdumpval.lo dumpdebuginfo.lo *.o
	$(RM) -f $(LIBRARIES) libdwdebug.so libdwdebug.lo
	$(RM) -f $(EXAMPLES)

distclean: distclean-subdirs

# How to recursively descend into subdirectories to make general
# targets such as `all'.
%.MAKE:
	@$(MAKE) -C $(dir $@) $(basename $(notdir $@))
%-subdirs: $(addsuffix /%.MAKE,$(SUBDIRS)) ;

.PHONY:	$(SUBDIRS)

.SECONDARY:
