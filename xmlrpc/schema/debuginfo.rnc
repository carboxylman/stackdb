
default namespace = "urn:flux.utah.edu:a3:vmi:debuginfo:1"

include "common.rnc"

Symbol = element symbol {
    SymbolContents
}

SymbolContents = 
    attribute id { xsd:ID } &
    attribute name { text }? &
    attribute size { xsd:unsignedInt }? &
    attribute source { "dwarf" | "elf" } &

    attribute external { xsd:boolean } &
    attribute declaration { xsd:boolean } &
    attribute prototyped { xsd:boolean } &
    attribute param { xsd:boolean } &
    attribute member { xsd:boolean } &
    attribute enumval { xsd:boolean } &
    attribute inlineInstance { xsd:boolean } &

    attribute baseAddr { ADDR }

InstanceInfo = 
    attribute typeRef { xsd:IDREF }? &
    attribute declaredInline { xsd:boolean } &
    attribute inlined { xsd:boolean } &
    attribute originRef { xsd:IDREF }? &
    element inlineInstances {
        SymbolRef+
    }?

Variable = element variable {
    SymbolContents & 
    attribute bitOffset { xsd:unsignedShort }? &
    attribute bitSize { xsd:unsignedShort }? &
    attribute locationType { "fixed" | "offset" | "runtime" }? &
    attribute constValue { text }? &
    LocationKinds? &
    InstanceInfo
}

LocationKinds = 
    FixedLocation | OffsetLocation

FixedLocation = element fixedLocation {
    attribute address { ADDR }
}

OffsetLocation = element offsetLocation {
    attribute offset { OFFSET }
}

SymbolRef = element symbolRef { xsd:IDREF }

Function = element function {
    SymbolContents &

    attribute argCount { xsd:unsignedShort } &
    attribute hasUnspecifiedParams { xsd:boolean } &
    attribute prologueEnd { ADDR }? &
    attribute epilogueBegin { ADDR }? &
    attribute entryPC { ADDR }? &
    attribute constValue { text }? &

    element arguments { SymbolRef* }? &
    Ranges? &

    InstanceInfo
}

Ranges = element ranges {
    element range {
        attribute start { ADDR },
	attribute end { ADDR }
    }+
}

Label = element label {
    SymbolContents &
    InstanceInfo &
    Ranges
}

Type = element type {
    TypeContents
}

TypeContents = 
    SymbolContents

VoidType = element voidType { empty }

BaseType = element baseType {
    TypeContents &
    attribute bitSize { xsd:unsignedShort }? &
    attribute encoding { 
        "address" | "boolean" | "complexFloat" | "float" | "signed"
	| "signedChar" | "unsigned" | "unsignedChar" | "imaginaryFloat"
	| "packedDecimal" | "numericString" | "edited" | "signedFixed"
	| "unsignedFixed"
    }
}

PointerType = element pointerType {
    TypeContents &
    attribute typeRef { xsd:IDREF }
}

TypedefType = element typedefType {
    TypeContents &
    attribute typeRef { xsd:IDREF }
}

ConstType = element constType {
    TypeContents &
    attribute typeRef { xsd:IDREF }
}

VolatileType = element constType {
    TypeContents &
    attribute typeRef { xsd:IDREF }
}

ArrayType = element arrayType {
    TypeContents &
    attribute subrangeCount { xsd:int } &
    element subranges {
        element subrange { xsd:int }+
    }
}

EnumType = element enumType {
    TypeContents &
    attribute memberCount { xsd:int } &
    element members { SymbolRef+ }
}

SUContents = 
    TypeContents &
    attribute memberCount { xsd:int } &
    element members { SymbolRef+ }

StructType = element structType { SUContents }

UnionType = element structType { SUContents }

FunctionType = element functionType {
    TypeContents &
    attribute argCount { xsd:unsignedShort } &
    attribute hasUnspecifiedParams { xsd:boolean} &
    element arguments { SymbolRef* }
}
